package table

import "github.com/ocuroot/ui/components/actiondropdown"

type TableProps struct {
	Columns []string
}

templ Table(props TableProps, columns ...string) {
	<table class="w-full text-sm text-left rtl:text-right text-secondary">
		<thead class="text-xs text-primary uppercase bg-secondary">
			<tr>
				for _, column := range columns {
					<th scope="col" class={ tableClasses(column) }>
						{ column }
					</th>
				}
			</tr>
		</thead>
		<tbody>
			{ children... }
		</tbody>
	</table>
}

func tableClasses(columnName string) string {
	if columnName == "Actions" {
		return "text-right px-6 py-4 overflow-visible"
	} else {
		return "px-6 py-4"
	}
}


type TRProps struct {
	Link templ.SafeURL
}

script goToLink(event templ.JSExpression, link templ.SafeURL) {
	window.location.href = link;
}


templ Tr(props TRProps) {
	if props.Link != "" {
		<tr class="bg-surface border-b hover:bg-secondary cursor-pointer" onclick={ goToLink(templ.JSExpression("event"), props.Link) }>
			{ children... }
		</tr>
	} else {
		<tr class="bg-surface border-b">
			{ children... }
		</tr>
	}
}

type TDProps struct {
	RightAlign bool
}

templ Td(props TDProps) {
	if props.RightAlign {
		<td scope="row" class="text-right px-6 py-4 font-medium text-primary whitespace-nowrap">
			{ children... }
		</td>
	} else {
		<td scope="row" class="px-6 py-4 font-medium text-primary whitespace-nowrap">
			{ children... }
		</td>
	}
}

templ TdActions(id string) {
	@Td(TDProps{RightAlign: true}) {
		@actiondropdown.Actions(id) {
			{ children... }
		}
	}
}
