package actiondropdown

import "github.com/ocuroot/ui/components/icons"

templ Actions(id string) {
	<button
		id="dropdownMenuIconHorizontalButton"
		data-dropdown-toggle={ id }
		onclick={ showHideDropdown(templ.JSExpression("event"), id) }
		class="inline-flex items-center p-2 text-sm font-medium text-center border rounded-lg bg-surface hover:bg-secondary focus:ring-4 focus:outline-none focus:ring-4 text-primary transition-colors duration-200"
		type="button"
	>
		@icons.Menu()
	</button>
	<!-- Dropdown menu -->
	<div id={ id } class="z-10 hidden text-left border bg-surface divide-y rounded-lg shadow w-44">
		<ul class="text-sm text-primary py-1" aria-labelledby="dropdownMenuIconHorizontalButton">
			{ children... }
		</ul>
	</div>
}

script showHideDropdown(event templ.JSExpression, id string) {
	event.stopPropagation();
	const dropdown = document.getElementById(id);
	if (dropdown) {
		dropdown.classList.toggle('hidden');
		
		// Close dropdown when clicking outside
		if (!dropdown.classList.contains('hidden')) {
			const closeDropdown = (e) => {
				if (!dropdown.contains(e.target) && !e.target.closest('[data-dropdown-toggle="' + id + '"]')) {
					dropdown.classList.add('hidden');
					document.removeEventListener('click', closeDropdown);
				}
			};
			setTimeout(() => document.addEventListener('click', closeDropdown), 0);
		}
	}
}

templ ActionLink(label, url string) {
	<li>
		<a href={ templ.URL(url) } class="w-full text-left block px-4 py-2 hover:bg-gray-100 dark:hover:bg-black/20 transition-colors duration-200 text-primary cursor-pointer rounded-md mx-2">
			{ label }
		</a>
	</li>
}

templ ActionItem() {
	<li class="hover:bg-gray-100 dark:hover:bg-black/20 transition-colors duration-200 cursor-pointer rounded-md mx-2">
		<div class="px-4 py-2">
			{ children... }
		</div>
	</li>
}
