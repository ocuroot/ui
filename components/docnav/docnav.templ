package docnav

import (
	"strings"
)

type NavLink struct {
	Title string
	URL   templ.SafeURL
	Children []NavLink
}

type NavSection struct {
	Heading string
	Links   []NavLink
}

type DocNavProps struct {
	Sections    []NavSection
	CurrentPath string
}

func isActive(current string, url templ.SafeURL) bool {
	c := strings.TrimSuffix(current, "/")
	u := strings.TrimSuffix(string(url), "/")
	return c == u
}

func isActiveOrDescendant(current string, l NavLink) bool {
	if isActive(current, l.URL) {
		return true
	}
	for _, child := range l.Children {
		if isActiveOrDescendant(current, child) {
			return true
		}
	}
	return false
}

func linkClass(active bool) string {
	if active {
		return "docnav-link docnav-link--active"
	}
	return "docnav-link"
}

templ DocNav(p DocNavProps) {
	<nav class="docnav">
		for _, section := range p.Sections {
			<div class="docnav-section">
				if section.Heading != "" {
					<div class="docnav-section-heading">{ section.Heading }</div>
				}
				<ul class="docnav-list">
					for _, l := range section.Links {
						<li>
							<a href={ l.URL } class={ linkClass(isActiveOrDescendant(p.CurrentPath, l)) }>{ l.Title }</a>
							if len(l.Children) > 0 {
								<ul class="docnav-sublist">
									for _, sl := range l.Children {
										<li>
											<a href={ sl.URL } class={ linkClass(isActive(p.CurrentPath, sl.URL)) }>{ sl.Title }</a>
										</li>
									}
								</ul>
							}
						</li>
					}
				</ul>
			</div>
		}
	</nav>
}
